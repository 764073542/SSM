<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.BorrowInfoMapper">

    <sql id="column_borrow_info">
        user_name, book_name, start_time, end_time, state
    </sql>

    <select id="queryAll" resultType="BorrowInfo">
        select
        <include refid="column_borrow_info"/>
        from user_book_borrow
    </select>
    <select id="queryByUserName" resultType="BorrowInfo" parameterType="String">
        select
        <include refid="column_borrow_info"/>
        from user_book_borrow where user_name = #{userName}
    </select>
    <select id="queryByBookName" resultType="BorrowInfo" parameterType="String">
        select
        <include refid="column_borrow_info"/>
        from user_book_borrow where book_name = #{bookName}
    </select>
    <select id="queryByState" resultType="BorrowInfo" parameterType="Integer">
        select
        <include refid="column_borrow_info"/>
        from user_book_borrow where state = #{state}
    </select>
    <!--<=会被解析需要使用<![CDATA[ <= ]]>-->
    <select id="queryByTime" resultType="BorrowInfo">
        select
        <include refid="column_borrow_info"/>
        from user_book_borrow where start_time >= #{param1} and start_time <![CDATA[ <= ]]> #{param2}
    </select>
    <!--获取id-->
    <select id="getInfoId" resultType="Long">
        select
        id
        from user_book_borrow where user_name=#{userName}
        and book_name=#{bookName}
        and state = #{state}
    </select>
    <!--插入记录-->
    <insert id="insertBorrowInfo" parameterType="BorrowInfo">
        insert ignore into user_book_borrow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="column_borrow_info"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{userName},#{bookName},#{startTime},#{endTime},#{state}
        </trim>
    </insert>
    <!--更新state-->
    <update id="updateBorrowState">
        update user_book_borrow
        <set>
            state=#{param2}
        </set>
        where id=#{param1}
    </update>
    <!--根据用户名删除记录-->
    <delete id="deleteBorrowInfoByUserName" parameterType="String">
        delete from user_book_borrow where
        user_name = #{userName}
    </delete>
</mapper>